---
import { getCollection } from "astro:content";
import type { GetStaticPathsOptions } from "astro";
import setSearchJson from "@/utils/vhSearch";
import moveTopToFirst from "@/utils/moveTopToFirst";
export async function getStaticPaths(options: GetStaticPathsOptions) {
	const { paginate } = options;
	let posts: any[] = [];
	try {
		posts = await getCollection("blog") || [];
		if (posts.length > 0) {
			// 按日期排序
			posts = posts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
			// 置顶文章功能
			moveTopToFirst(posts);
			// 生成 Search JSON 文件
			await setSearchJson(posts);
		}
	} catch (error) {
		console.error("获取文章列表失败:", error);
	}
	
	// 隐藏的文章不显示
	return paginate(
		posts.length > 0 ? posts.filter(i => !i.data.hide) : [],
		{ pageSize: 15 }
	);
}

const { page } = Astro.props;
const { data = [], ...page_data } = page || { data: [] };
// 页面 Info
import SITE_CONFIG from "@/config";
const { Description } = SITE_CONFIG;
// 博客列表组件
import ArticleCard from "@/components/ArticleCard/ArticleCard.astro";
// 公共 Layout
import Layout from "@/layouts/Layout/Layout.astro";
// 分页组件
import Pagination from "@/components/Pagination/Pagination.astro";
const currentPage = page_data?.url?.current ? page_data.url.current.replace("/", "") : "";
---

<Layout title={currentPage ? `第${currentPage}页文章` : ""} description={Description} Home={true}>
	<section class="article-list-main">
		<section class="article-list">
			<!-- 文章列表 -->
			{data && data.length > 0 ? (
				data.map((post, index) => <ArticleCard post={post} index={index} />)
			) : (
				<div class="no-articles">
					<p>暂无文章</p>
				</div>
			)}
			<!-- 分页 -->
		</section>
		{page_data?.url && <Pagination data={page_data.url} />}
	</section>
</Layout>
